on: [push, pull_request]

name: Continuous integration

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
    steps:
      - run: |
          sudo apt-get install -y pkg-config libudev-dev libasound2-dev build-essential alsa \
          libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: Cache Cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-check-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-registry-check-
      - name: Cache Cargo build artifacts
        uses: actions/cache@v2
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-check-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-build-target-registry-check-
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
      - uses: actions-rs/cargo@v1
        with:
          command: test
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust:
          - stable
        target:
          - x86_64-unknown-linux-gnu
          - wasm32-unknown-unknown
          - x86_64-pc-windows-gnu
    steps:
      - run: |
          sudo apt-get install -y pkg-config libudev-dev libasound2-dev build-essential alsa \
          libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev mingw-w64
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true
      - name: Cache Cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-registry-${{ matrix.target }}-
          # I'm not sure if this will bring anything apart from possible weird issues, but this is how its done
#      - name: Cache Cargo build artifacts
#        uses: actions/cache@v2
#        with:
#          path: target
#          key: ${{ runner.os }}-cargo-build-target-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
#          restore-keys: ${{ runner.os }}-cargo-build-target-${{ matrix.target }}-
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
      - run: mv target/${{ matrix.target}}/release/space_business2_riir* .
      - name: Upload Artifact
        id: upload-artifact
        uses: actions/upload-artifact@v2
        with:
          name: space-business-${{ matrix.target }}
          path: |
            space_business2_riir*
            assets/
            data/
            !space_business2_riir.d
      - name: Notify success on Discord
        if: success() && matrix.target == 'x86_64-pc-windows-gnu'
        uses: Ilshidur/action-discord@2.4.4
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK_SUCCESS }}
          content: |
            Build succeeded! :white_check_mark:
            Commit Message: "${{ github.event.head_commit.message }}"
            Artifact: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/${{ steps.upload-artifact.outputs.id }}
          status: ${{ job.status }}
          color: "65280"